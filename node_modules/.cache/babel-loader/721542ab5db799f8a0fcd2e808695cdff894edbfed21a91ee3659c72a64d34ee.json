{"ast":null,"code":"var _jsxFileName = \"/Users/goksudayan/Desktop/web/src/Components/CurrentDate.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function CurrentDate() {\n  _s();\n  const [currentTime, setCurrentTime] = useState(new Date());\n  useEffect(() => {\n    const updateTime = () => {\n      setCurrentTime(new Date());\n    };\n    const updateIn = setInterval(updateTime, 1000);\n    return () => {\n      clearInterval(updateIn);\n    };\n  }, []);\n  const formattedTime = currentTime.toLocaleTimeString([], {\n    hour: '2-digit',\n    minute: '2-digit',\n    hour12: false\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Izmir, Turkey (GMT+3)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Current Time: \", formattedTime]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(CurrentDate, \"f3elDUct5ap4W3FuLtGG73aMsLc=\");\n_c = CurrentDate;\nvar _c;\n$RefreshReg$(_c, \"CurrentDate\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","CurrentDate","_s","currentTime","setCurrentTime","Date","updateTime","updateIn","setInterval","clearInterval","formattedTime","toLocaleTimeString","hour","minute","hour12","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/goksudayan/Desktop/web/src/Components/CurrentDate.js"],"sourcesContent":["import React, {Â useState, useEffect } from 'react'\n\nexport default function CurrentDate() {\n\n    const [currentTime, setCurrentTime] = useState(new Date());\n\n    useEffect(() => {\n      const updateTime = () => {\n        setCurrentTime(new Date());\n      };\n  \n      const updateIn = setInterval(updateTime, 1000);\n  \n      return () => {\n        clearInterval(updateIn);\n      };\n    }, []);\n  \n    const formattedTime = currentTime.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit', hour12: false });\n\n    return (\n        <>\n            <p>Izmir, Turkey (GMT+3)</p>\n            <p>Current Time: {formattedTime}</p>\n        </>\n  )\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAElD,eAAe,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EAElC,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,IAAIU,IAAI,CAAC,CAAC,CAAC;EAE1DT,SAAS,CAAC,MAAM;IACd,MAAMU,UAAU,GAAGA,CAAA,KAAM;MACvBF,cAAc,CAAC,IAAIC,IAAI,CAAC,CAAC,CAAC;IAC5B,CAAC;IAED,MAAME,QAAQ,GAAGC,WAAW,CAACF,UAAU,EAAE,IAAI,CAAC;IAE9C,OAAO,MAAM;MACXG,aAAa,CAACF,QAAQ,CAAC;IACzB,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMG,aAAa,GAAGP,WAAW,CAACQ,kBAAkB,CAAC,EAAE,EAAE;IAAEC,IAAI,EAAE,SAAS;IAAEC,MAAM,EAAE,SAAS;IAAEC,MAAM,EAAE;EAAM,CAAC,CAAC;EAE/G,oBACIhB,OAAA,CAAAE,SAAA;IAAAe,QAAA,gBACIjB,OAAA;MAAAiB,QAAA,EAAG;IAAqB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eAC5BrB,OAAA;MAAAiB,QAAA,GAAG,gBAAc,EAACL,aAAa;IAAA;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA,eACtC,CAAC;AAEX;AAACjB,EAAA,CAxBuBD,WAAW;AAAAmB,EAAA,GAAXnB,WAAW;AAAA,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}