{"ast":null,"code":"var _jsxFileName = \"/Users/goksudayan/Desktop/web/src/Components/TimeInIzmir.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function TimeInIzmir() {\n  _s();\n  const [currentTime, setCurrentTime] = useState(new Date());\n  useEffect(() => {\n    const updateTime = () => {\n      setCurrentTime(new Date());\n    };\n    const updateIn = setInterval(updateTime, 1000);\n    return () => {\n      clearInterval(updateIn);\n    };\n  }, []);\n  const formattedTime = currentTime.toLocaleTimeString([], {\n    hour: '2-digit',\n    minute: '2-digit'\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: formattedTime\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n_s(TimeInIzmir, \"f3elDUct5ap4W3FuLtGG73aMsLc=\");\n_c = TimeInIzmir;\nvar _c;\n$RefreshReg$(_c, \"TimeInIzmir\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","TimeInIzmir","_s","currentTime","setCurrentTime","Date","updateTime","updateIn","setInterval","clearInterval","formattedTime","toLocaleTimeString","hour","minute","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/goksudayan/Desktop/web/src/Components/TimeInIzmir.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\n\nexport default function TimeInIzmir() {\n    const [currentTime, setCurrentTime] = useState(new Date())\n\n    useEffect ( () => {\n        const updateTime = () => {\n            setCurrentTime(new Date())\n        }\n\n        const updateIn = setInterval(updateTime, 1000)\n\n        return () => {\n            clearInterval(updateIn)\n        }\n    },Â [])\n\n    const formattedTime = currentTime.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\n\n    return (\n    <>\n        <p>{formattedTime}</p>\n    </>\n  )\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAElD,eAAe,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EAClC,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,IAAIU,IAAI,CAAC,CAAC,CAAC;EAE1DT,SAAS,CAAG,MAAM;IACd,MAAMU,UAAU,GAAGA,CAAA,KAAM;MACrBF,cAAc,CAAC,IAAIC,IAAI,CAAC,CAAC,CAAC;IAC9B,CAAC;IAED,MAAME,QAAQ,GAAGC,WAAW,CAACF,UAAU,EAAE,IAAI,CAAC;IAE9C,OAAO,MAAM;MACTG,aAAa,CAACF,QAAQ,CAAC;IAC3B,CAAC;EACL,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMG,aAAa,GAAGP,WAAW,CAACQ,kBAAkB,CAAC,EAAE,EAAE;IAAEC,IAAI,EAAE,SAAS;IAAEC,MAAM,EAAE;EAAU,CAAC,CAAC;EAEhG,oBACAf,OAAA,CAAAE,SAAA;IAAAc,QAAA,eACIhB,OAAA;MAAAgB,QAAA,EAAIJ;IAAa;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI;EAAC,gBACxB,CAAC;AAEP;AAAChB,EAAA,CAtBuBD,WAAW;AAAAkB,EAAA,GAAXlB,WAAW;AAAA,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}